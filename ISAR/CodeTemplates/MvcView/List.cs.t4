<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension=".cshtml" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Linq" #>
<#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #>
<#@ include file="Imports.include.t4" #>
<#
string routePrefix;

routePrefix = ViewName;
#>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "Listado de <#= ViewDataTypeShortName #>";
	ViewBag.Grupo = "Administración";
    ViewBag.Pantalla = ViewBag.Title;
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h4>@ViewBag.Title <a href="@Url.Action("Create")" class="btn btn-success btn-cons" style="margin-left: 20px;">Agregar <#= ViewDataTypeShortName #></a></h4>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<table class="table" id="dtTable">
	<thead>
		<tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
			<th>
				@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
			</th>
<#
    }
}
#>
			<th width="100"></th>
		</tr>
	</thead>
	<tbody>
@foreach (var item in Model) {
		<tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
			<td>
				@Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
			</td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
			<a href="@Url.Action("Edit", new { id=item.<#= pkName #> })" style="color:green" class="fa fa-edit"></a>
			<a href="#" style="color:red" class="fa fa-minus" data-toggle="modal" data-target="#modalDelete" data-id="@item.<#= pkName #>" data-puede-eliminar="@item.PuedeEliminar()" id="btnDelete"></a>
        </td>
<#
} else {
#>
        <td>
			<a href="@Url.Action("Edit", new { id=item.PrimaryKey })" style="color:green" class="fa fa-edit"></a>
			<a href="#" style="color:red" class="fa fa-minus" data-toggle="modal" data-target="#modalDelete" data-id="@item.PrimaryKey" data-puede-eliminar="@item.PuedeEliminar()" id="btnDelete"></a>
        </td>
<#
}
#>
		</tr>
}
	</tbody>
</table>

<div class="modal fade slide-up disable-scroll" id="modalDelete" tabindex="-1" role="dialog" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content-wrapper">
            <div class="modal-content">
                <div class="modal-header clearfix text-left">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <i class="pg-close fs-14"></i>
                    </button>
                    <h4 class="semi-bold">¿Esta seguro que desea eliminar este <#= ViewDataTypeShortName #>?</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Delete", "<#= ViewDataTypeShortName #>", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
<# if (pkName != null) { #>
                        @Html.Hidden("<#= pkName #>")
<# }
else { #>
						@Html.Hidden("PrimaryKey")
<# } #>
                        <div class="row">
                            <div class="col-md-8"></div>
                            <div class="col-md-4">
                                <input type="submit" value="Eliminar <#= ViewDataTypeShortName #>" class="btn btn-primary btn-block m-t-5 pull-right" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var settings = {
                "sDom": "<'table-responsive't><'row'<'pull-right'p> <'pull-left'i>>",
                "sPaginationType": "bootstrap",
                "destroy": true,
                "scrollCollapse": true,
                "oLanguage": {
                    "sLengthMenu": "_MENU_ ",
                    "sInfo": "Mostrando items del <b>_START_ al _END_</b> de un total de _TOTAL_ items",
                    "sEmptyTable": "No existe información para mostrar.",
                    "sInfoEmpty": ""
                },
                "iDisplayLength": 10
            };

            $('#dtTable').dataTable(settings);
        });

		$('#modalDelete').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var Id = button.data('id');
			var del = button.data("puede-eliminar");

			if (del == "False") {
                $('body').pgNotification({
                    style: 'flip',
                    message: 'No se puede eliminar un <#= ViewDataTypeShortName #> que está en uso.',
                    type: 'danger'
                }).show();
                return false;
            }
            var modal = $(this)
<# if (pkName != null) { #>
                        modal.find("#<#= pkName #>").val(Id);
<# }
else { #>
						modal.find("#PrimaryKey").val(Id);
<# } #>
        })
    </script>
}
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>