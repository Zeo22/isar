@using ISAR.Models
@model ISAR.Models.Estrategia

@{
    ViewBag.Title = "Agregar Estrategia";
    switch ((string)ViewBag.Nivel)
    {
        case "1":
            ViewBag.Grupo = "Nivel Superior";
            ViewBag.Pantalla = ViewBag.Title;
            break;
        case "2":
            ViewBag.Grupo = "Nivel Vicepresidencia";
            ViewBag.Pantalla = ViewBag.Title;
            break;
        case "3":
            ViewBag.Grupo = "Nivel Operativo";
            ViewBag.Pantalla = ViewBag.Title;
            break;
    }
}

<h4>@ViewBag.Title</h4>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.Hidden("lvl", (string)ViewBag.Nivel)
    @Html.Hidden("ObjetivosIds", "")
    <div class="row">
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.Titulo)
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-10">
            <div class="form-group form-group-default">
                @Html.LabelFor(model => model.ObjetivoAlineado)
                <select class="full-width" data-init-plugin="select2" name="Objetivo" id="Objetivo">
                    @foreach (Objetivo item in ViewBag.Objetivos)
                    {
                        <option value="@item.ID">@item.Nombre</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-success btn-cons" id="AgregarObjetivo">
                Agregar Objetivo
            </button>
        </div>
    </div>

    <div class="row">
        <table class="table" id="dtObjetivos">
            <thead>
                <tr>
                    <th>
                        Objetivo
                    </th>
                    <th width="100">
                        Eliminar
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    
    <div class="row">
        <a href="@Url.Action("index", new { lvl = ViewBag.Nivel })" class="btn btn-warning btn-cons">Regresar</a> 
        @*<input type="submit" value="Agregar Estrategia" class="btn btn-success btn-cons" />*@
        <button type="button" class="btn btn-success btn-cons" id="Submit">
            Agregar Estrategia
        </button>
    </div>
}

@section scripts {
@Scripts.Render("~/bundles/jqueryval")
    <script>
        var initial_data_objetivos = [];

        var settings_objetivos = {
            "sDom": "<'table-responsive't><'row'<'pull-right'p> <'pull-left'i>>",
            "sPaginationType": "bootstrap",
            "destroy": true,
            "scrollCollapse": true,
            "oLanguage": {
                "sLengthMenu": "_MENU_ ",
                "sInfo": "Mostrando items del <b>_START_ al _END_</b> de un total de _TOTAL_ items",
                "sEmptyTable": "No existe información para mostrar.",
                "sInfoEmpty": ""
            },
            "iDisplayLength": 10,
            "data": initial_data_objetivos,
            "columns": [
                { name: "Objetivo", data: 'text' },
                { name: "Eliminar", data: "Eliminar" }
            ]
        };

        $('#dtObjetivos').dataTable(settings_objetivos);

        $("#AgregarObjetivo").on("click", function () {
            if ($("#Objetivo").select2("val") == "") return;
            var table = $('#dtObjetivos').DataTable();
            var data = $("#Objetivo").select2("data")
            var exists = false;
            var i = 1;

            table.rows().every(function () {
                var data = this.data();

                i++;
                if (data.id == $("#Objetivo").select2("val")) {
                    exists = true;
                    return;
                }
            });

            if (exists) {
                $('body').pgNotification({
                    style: 'flip',
                    message: 'El Objetivo seleccionado ya esta asignado.',
                    type: 'danger'
                }).show();
                return;
            }

            if (i > 2) {
                $('body').pgNotification({
                    style: 'flip',
                    message: 'Solo se puede alinear una Estrategia con un máximo de 2 Objetivos.',
                    type: 'danger'
                }).show();
                return;
            }

            table.row.add({
                id: data.id,
                alineacion: data.alineacion,
                text: data.text,
                Eliminar: '<a href="javascript: nop(void);" style="color:red" class="fa fa-minus"></a>'
            }).draw();
        });

        $('#dtObjetivos tbody').on('click', 'a.fa-minus', function () {
            var table = $('#dtObjetivos').DataTable();

            table
                .row($(this).parents('tr'))
                .remove()
                .draw();
        });

        $("#Submit").on("click", function () {
            var table_objetivos = $('#dtObjetivos').DataTable();
            var ObjetivosIds = [];
            table_objetivos.rows().every(function () {
                var data = this.data();

                ObjetivosIds.push(data.id);
            });
            $("#ObjetivosIds").val(ObjetivosIds.join(","));
            $("form").submit();
        });
    </script>
}