@using ISAR.Models;
@model ISAR.Models.Objetivo

@{
    ViewBag.Title = "Detalle de Objetivo";
    switch ((string)ViewBag.Nivel)
    {
        case "1":
            ViewBag.Grupo = "Nivel Superior";
            ViewBag.Pantalla = ViewBag.Title;
            break;
        case "2":
            ViewBag.Grupo = "Nivel Vicepresidencia";
            ViewBag.Pantalla = ViewBag.Title;
            break;
        case "3":
            ViewBag.Grupo = "Nivel Operativo";
            ViewBag.Pantalla = ViewBag.Title;
            break;
    }
}

<h4>@ViewBag.Title</h4>

<div class="row">
    <div class="col-md-12">
        @Html.ValidationSummary("", new { @class = "text-danger" })
    </div>
</div>

<div class="row">
    <div class="col-md-6"></div>
    <div class="col-md-6"></div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group form-group-default required">
            @Html.LabelFor(model => model.Nombre)
            @Html.DisplayFor(model => model.Nombre)
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.Tipo)
            @Html.DisplayFor(model => model.Tipo.Nombre)
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel-title">
                    Descripción
                </div>
            </div>
            <div class="panel-body">
                @Html.DisplayFor(model => model.Descripcion)
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.Categoria)
            @Html.DisplayFor(model => model.Categoria.Nombre)
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.FechaInicio)
            @Html.DisplayFor(model => model.FechaInicio)
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.Area)
            @(Model.Area.AreaPadre != null ? Model.Area.AreaPadre.Nombre + " - " : "")@Model.Area.Nombre
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.FechaFinal)
            @Html.DisplayFor(model => model.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group form-group-default">
            @Html.LabelFor(model => model.Responsable)
            @Html.DisplayFor(model => model.Responsable.Nombre)
        </div>
    </div>
</div>

<h4>Atribuciones</h4>

<div class="row">
    <table class="table" id="dtAtribuciones">
        <thead>
            <tr>
                <th>
                    Area
                </th>
                <th>
                    Atribución
                </th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@if (ViewBag.Nivel != "1")
{
    <h4>Objetivos Alineados</h4>

    <div class="row">
        <table class="table" id="dtObjetivos">
            <thead>
                <tr>
                    <th>
                        Objetivo
                    </th>
                    <th>
                        Alineación
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <a href="@Url.Action("index", new { lvl = ViewBag.Nivel })" class="btn btn-warning btn-cons">Regresar</a>
    </div>
</div>

@section scripts {
    <script>
        var initial_data = @Html.Raw(ViewBag.JSONAtribuciones);

        $("#FechaInicio, #FechaFinal").datepicker({
            language: 'es',
            format: 'dd/mm/yyyy',
            autoclose: true
        });

        $("select").select2("readonly", true);

        var settings = {
            "sDom": "<'table-responsive't><'row'<'pull-right'p> <'pull-left'i>>",
            "sPaginationType": "bootstrap",
            "destroy": true,
            "scrollCollapse": true,
            "oLanguage": {
                "sLengthMenu": "_MENU_ ",
                "sInfo": "Mostrando items del <b>_START_ al _END_</b> de un total de _TOTAL_ items",
                "sEmptyTable": "No existe información para mostrar.",
                "sInfoEmpty": ""
            },
            "iDisplayLength": 10,
            "data": initial_data,
            "columns": [
                { name: "Area", data: 'area' },
                { name: "Atribucion", data: "text" }
            ]
        };

        $('#dtAtribuciones').dataTable(settings);

        // Objetivos
        var initial_data_objetivos = @Html.Raw(ViewBag.JSONObjetivos);

        var settings_objetivos = {
            "sDom": "<'table-responsive't><'row'<'pull-right'p> <'pull-left'i>>",
            "sPaginationType": "bootstrap",
            "destroy": true,
            "scrollCollapse": true,
            "oLanguage": {
                "sLengthMenu": "_MENU_ ",
                "sInfo": "Mostrando items del <b>_START_ al _END_</b> de un total de _TOTAL_ items",
                "sEmptyTable": "No existe información para mostrar.",
                "sInfoEmpty": ""
            },
            "iDisplayLength": 10,
            "data": initial_data_objetivos,
            "columns": [
                { name: "Objetivo", data: 'text' },
                { name: "Alineación", data: "alineacion" }
            ]
        };

        $('#dtObjetivos').dataTable(settings_objetivos);

    </script>
}
