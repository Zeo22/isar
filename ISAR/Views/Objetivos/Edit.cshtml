@using ISAR.Models;
@model ISAR.Models.Objetivo

@{
    ViewBag.Title = "Editar Objetivo";
    switch ((string)ViewBag.Nivel)
    {
        case "1":
            ViewBag.Grupo = "Nivel Superior";
            ViewBag.Pantalla = ViewBag.Title;
            break;
        case "2":
            ViewBag.Grupo = "Nivel Vicepresidencia";
            ViewBag.Pantalla = ViewBag.Title;
            break;
        case "3":
            ViewBag.Grupo = "Nivel Operativo";
            ViewBag.Pantalla = ViewBag.Title;
            break;
    }
}

<h4>@ViewBag.Title</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("lvl", (string)ViewBag.Nivel)
    @Html.Hidden("AtribucionesIds", "")
    @Html.Hidden("EstrategiasIds", "")
    <div class="row">
        <div class="col-md-12">
            @Html.ValidationSummary("", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-6"></div>
        <div class="col-md-6"></div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group form-group-default required">
                @Html.LabelFor(model => model.Nombre)
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group form-group-default">
                @Html.LabelFor(model => model.Tipo)
                <select class="full-width" data-init-plugin="select2" name="Tipo" id="Tipo">
                    @foreach (TipoObjetivo item in ViewBag.Tipos)
                    {
                        <option value="@item.ID" @(@Model.Tipo.ID == item.ID ? "selected=\"selected\"" : "")>@item.Nombre</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        Descripción
                    </div>
                </div>
                <div class="panel-body">
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = "5" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group form-group-default">
                @Html.LabelFor(model => model.Categoria)
                <select class="full-width" data-init-plugin="select2" name="Categoria" id="Categoria">
                    @foreach (CategoriaObjetivo item in ViewBag.Categorias)
                    {
                        <option value="@item.ID" @(@Model.Categoria.ID == item.ID ? "selected=\"selected\"" : "")>@item.Nombre</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group form-group-default input-group">
                @Html.LabelFor(model => model.FechaInicio)
                @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group form-group-default">
                @Html.LabelFor(model => model.Area)
                <select class="full-width" data-init-plugin="select2" name="Area" id="Area">
                    @foreach (Area item in ViewBag.Areas)
                    {
                        <option value="@item.ID" @(@Model.Area.ID == item.ID ? "selected=\"selected\"" : "")>@(item.AreaPadre != null ? item.AreaPadre.Nombre + " - " : "")@item.Nombre</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group form-group-default input-group">
                @Html.LabelFor(model => model.FechaFinal)
                @Html.EditorFor(model => model.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group form-group-default">
                @Html.LabelFor(model => model.Responsable)
                <select class="full-width" data-init-plugin="select2" name="Responsable" id="Responsable">
                    @foreach (ApplicationUser item in ViewBag.Responsables)
                    {
                        <option value="@item.Id" @(@Model.Responsable.Id == item.Id ? "selected=\"selected\"" : "")>@item.Nombre</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <h4>Atribuciones</h4>

    <div class="row">
        <div class="col-md-10">
            <div class="form-group form-group-default">
                @Html.Label("Atribucion", "Atribución")
                @Html.Hidden("Atribucion", "", new { style = "width: 100%;" })
            </div>
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-success btn-cons" id="AgregarAtribucion">
                Agregar Atribución
            </button>
        </div>
    </div>

    <div class="row">
        <table class="table" id="dtAtribuciones">
            <thead>
                <tr>
                    <th>
                        Area
                    </th>
                    <th>
                        Atribución
                    </th>
                    <th width="100">
                        Eliminar
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    if (ViewBag.Nivel != "1")
    {
        <h4>Estrategias Alineadas</h4>

        if (ViewBag.Nivel == "2")
        {
            <div class="row">
                <div style="display: none;">
                    <div class="form-group form-group-default">
                        @Html.LabelFor(model => model.Alineacion)
                        <select class="full-width" data-init-plugin="select2" name="Alineacion" id="Alineacion">
                            @foreach (TipoAlineacion item in ViewBag.Alineacion)
                            {
                                <option value="@item.ID">@item.Nombre</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group form-group-default">
                        @Html.Label("ObjetivoAlineado", "Objetivo")
                        @Html.Hidden("ObjetivoAlineado", "", new { style = "width: 100%;" })
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group form-group-default">
                        @Html.Label("Estrategia", "Estrategia")
                        @Html.Hidden("Estrategia", "", new { style = "width: 100%;" })
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-success btn-cons" id="AgregarEstrategia">
                        Agregar Estrategia
                    </button>
                </div>
            </div>
        }
        if (ViewBag.Nivel == "3")
        {
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group form-group-default">
                        @Html.LabelFor(model => model.Alineacion)
                        <select class="full-width" data-init-plugin="select2" name="Alineacion" id="Alineacion">
                            @foreach (TipoAlineacion item in ViewBag.Alineacion)
                            {
                                <option value="@item.ID">@item.Nombre</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="form-group form-group-default">
                        @Html.Label("AreaAlineada", "Area")
                        @Html.Hidden("AreaAlineada", "", new { style = "width: 100%;" })
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-success btn-cons" id="AgregarEstrategia">
                        Agregar Estrategia
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-5">
                    <div class="form-group form-group-default">
                        @Html.Label("ObjetivoAlineado", "Objetivo")
                        @Html.Hidden("ObjetivoAlineado", "", new { style = "width: 100%;" })
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group form-group-default">
                        @Html.Label("Estrategia", "Estrategia")
                        @Html.Hidden("Estrategia", "", new { style = "width: 100%;" })
                    </div>
                </div>
                <div class="col-md-2"></div>
            </div>
        }
        <div class="row">
            <table class="table" id="dtEstrategias">
                <thead>
                    <tr>
                        <th>
                            Estrategia
                        </th>
                        <th>
                            Alineación
                        </th>
                        <th width="100">
                            Eliminar
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    }

    <div class="row">
        <div class="col-md-12">
            <a href="@Url.Action("index", new { lvl = ViewBag.Nivel })" class="btn btn-warning btn-cons">Regresar</a>
            @*<input type="submit" value="Agregar Objetivo" class="btn btn-success btn-cons" />*@
            <button type="button" class="btn btn-success btn-cons" id="Submit">
                Editar Objetivo
            </button>
        </div>
    </div>
}

@section scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $("#FechaInicio, #FechaFinal").datepicker({
            language: 'es',
            format: 'dd/mm/yyyy',
            autoclose: true
        });

        // Atribuciones
        $("#Atribucion").select2({
            placeholder: "Selecciona una Atribución",
            minimumInputLength: -1,
            ajax: {
                url: "@Url.Action("Atribuciones")",
                dataType: 'json',
                quietMillis: 250,
                data: function (term, page) {
                    return {
                        search: term,
                        AreaId: $("#Area").select2("val")
                    };
                },
                results: function (data, page) {
                    return { results: data };
                },
                cache: true
            },
            initSelection: function (element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected repository's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the repository name is shown preselected
                var id = $(element).val();
                if (id !== "") {
                    $.ajax("@Url.Action("Atribuciones")/?id" + id, {
                        dataType: "json"
                    }).done(function (data) { callback(data); });
                }
            }
        });

        var initial_data = @Html.Raw(ViewBag.JSONAtribuciones);

        var settings = {
            "sDom": "<'table-responsive't><'row'<'pull-right'p> <'pull-left'i>>",
            "sPaginationType": "bootstrap",
            "destroy": true,
            "scrollCollapse": true,
            "oLanguage": {
                "sLengthMenu": "_MENU_ ",
                "sInfo": "Mostrando items del <b>_START_ al _END_</b> de un total de _TOTAL_ items",
                "sEmptyTable": "No existe información para mostrar.",
                "sInfoEmpty": ""
            },
            "iDisplayLength": 10,
            "data": initial_data,
            "columns": [
                { name: "Area", data: 'area' },
                { name: "Atribucion", data: "text" },
                { name: "Eliminar", data: "Eliminar" }
            ]
        };

        $('#dtAtribuciones').dataTable(settings);

        $("#AgregarAtribucion").on("click", function () {
            if ($("#Atribucion").select2("val") == "") return;
            var table = $('#dtAtribuciones').DataTable();
            var data = $("#Atribucion").select2("data")
            var exists = false;

            table.rows().every(function () {
                var data = this.data();

                if (data.id == $("#Atribucion").select2("val")) {
                    exists = true;
                    return;
                }
            });

            if (exists) {
                $('body').pgNotification({
                    style: 'flip',
                    message: 'La Atribución seleccionada ya esta asignada.',
                    type: 'danger'
                }).show();
                return;
            }

            table.row.add({
                id: data.id,
                area: data.area,
                text: data.text,
                Eliminar: '<a href="javascript: nop(void);" style="color:red" class="fa fa-minus"></a>'
            }).draw();
        });

        $('#dtAtribuciones tbody').on('click', 'a.fa-minus', function () {
            var table = $('#dtAtribuciones').DataTable();

            table
                .row($(this).parents('tr'))
                .remove()
                .draw();
        });

        // Objetivos
        $("#Alineacion").on("change", function (e) {
            if (e.val == "1") {
                $("#AreaAlineada").select2("val", "");
                $("#AreaAlineada").select2("readonly", true);
            }
            if (e.val == "2") {
                $("#AreaAlineada").select2("readonly", false);
            }
        });

        $("#AreaAlineada").select2({
            placeholder: "Seleccione un Área",
            minimumInputLength: -1,
            ajax: {
                url: "@Url.Action("Areas")",
                dataType: 'json',
                quietMillis: 250,
                data: function (term, page) {
                    return {
                        search: term
                    };
                },
                results: function (data, page) {
                    return { results: data };
                },
                cache: true
            },
            initSelection: function (element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected repository's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the repository name is shown preselected
                var id = $(element).val();
                if (id !== "") {
                    $.ajax("@Url.Action("Objetivos")/?id" + id, {
                        dataType: "json"
                    }).done(function (data) { callback(data); });
                }
            }
        });

        $("#Estrategia").select2({
            placeholder: "Seleccione una Estrategia",
            minimumInputLength: -1,
            ajax: {
                url: "@Url.Action("Estrategias")",
                dataType: 'json',
                quietMillis: 250,
                data: function (term, page) {
                    return {
                        search: term,
                        alineacionId: $("#Alineacion").select2("val"),
                        objetivoId: $("#ObjetivoAlineado").select2("val")
                    };
                },
                results: function (data, page) {
                    return { results: data };
                },
                cache: true
            },
            initSelection: function (element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected repository's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the repository name is shown preselected
                var id = $(element).val();
                if (id !== "") {
                    $.ajax("@Url.Action("Objetivos")/?id" + id, {
                        dataType: "json"
                    }).done(function (data) { callback(data); });
                }
            }
        });

        $("#ObjetivoAlineado").select2({
            placeholder: "Seleccione un Objetivo",
            minimumInputLength: -1,
            ajax: {
                url: "@Url.Action("Objetivos")",
                dataType: 'json',
                quietMillis: 250,
                data: function (term, page) {
                    return {
                        search: term,
                        alineacionId: $("#Alineacion").select2("val"),
                        areaId: $("#AreaAlineada").attr("readonly") == "readonly" || $("#AreaAlineada").length == 0 ? $("#Area").select2("val") : $("#AreaAlineada").select2("val")
                    };
                },
                results: function (data, page) {
                    return { results: data };
                },
                cache: true
            },
            initSelection: function (element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected repository's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the repository name is shown preselected
                var id = $(element).val();
                if (id !== "") {
                    $.ajax("@Url.Action("Objetivos")/?id" + id, {
                        dataType: "json"
                    }).done(function (data) { callback(data); });
                }
            }
        });

        var initial_data_estrategias = @Html.Raw(ViewBag.JSONEstrategias);

        var settings_estrategias = {
            "sDom": "<'table-responsive't><'row'<'pull-right'p> <'pull-left'i>>",
            "sPaginationType": "bootstrap",
            "destroy": true,
            "scrollCollapse": true,
            "oLanguage": {
                "sLengthMenu": "_MENU_ ",
                "sInfo": "Mostrando items del <b>_START_ al _END_</b> de un total de _TOTAL_ items",
                "sEmptyTable": "No existe información para mostrar.",
                "sInfoEmpty": ""
            },
            "iDisplayLength": 10,
            "data": initial_data_estrategias,
            "columns": [
                { name: "Estrategia", data: 'text' },
                { name: "Alineación", data: "alineacion" },
                { name: "Eliminar", data: "Eliminar" }
            ]
        };

        $('#dtEstrategias').dataTable(settings_estrategias);

        $("#AgregarEstrategia").on("click", function () {
            if ($("#Estrategia").select2("val") == "") return;
            var table = $('#dtEstrategias').DataTable();
            var data = $("#Estrategia").select2("data")
            var exists = false;

            table.rows().every(function () {
                var data = this.data();

                if (data.id == $("#Estrategia").select2("val")) {
                    exists = true;
                    return;
                }
            });

            if (exists) {
                $('body').pgNotification({
                    style: 'flip',
                    message: 'La Estrategia seleccionada ya esta asignada.',
                    type: 'danger'
                }).show();
                return;
            }

            table.row.add({
                id: data.id,
                alineacion: data.alineacion,
                text: data.text,
                Eliminar: '<a href="javascript: nop(void);" style="color:red" class="fa fa-minus"></a>'
            }).draw();
        });

        $('#dtEstrategias tbody').on('click', 'a.fa-minus', function () {
            var table = $('#dtEstrategias').DataTable();

            table
                .row($(this).parents('tr'))
                .remove()
                .draw();
        });

        $("#Submit").on("click", function () {
            var table = $('#dtAtribuciones').DataTable();
            var table_estrategias = $('#dtEstrategias').DataTable();
            var AtribucionesIds = [];
            var EstrategiasIds = [];
            table.rows().every(function () {
                var data = this.data();

                AtribucionesIds.push(data.id);
            });
            table_estrategias.rows().every(function () {
                var data = this.data();

                EstrategiasIds.push(data.id);
            });
            $("#AtribucionesIds").val(AtribucionesIds.join(","));
            $("#EstrategiasIds").val(EstrategiasIds.join(","));
            $("form").submit();
        });

        $(document).ready(function () {
            $("#AreaAlineada").select2("readonly", true);
        });

    </script>
}
